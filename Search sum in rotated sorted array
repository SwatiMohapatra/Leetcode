Input :  A array is already sorted but its rotated by k position. eg. sorted array=[6,8,9,10,11,15].. its rotated, thus final input array: a=[11,15,6,8,9,10]
a integer value sum will be given.
output: Find if a pair of elements in a sums to sum

#Explaination written in code file

#a=[11,15,6,8,9,10]
a=[6,10]
n=len(a)
target=16

def findpivot():
    for i in range(1,n):
        if a[i]<a[i-1]:
            print(i,i-1)
            return i,i-1
    return 0,n-1    #if array is already sorted?

def sum():
    j,i = findpivot()
    while i!=j:
        print(i,j,a[i],a[j])
        if a[i]+a[j]==target:
            return True,a[i],a[j]
        elif a[i]+a[j]>target:
            i=i-1
            if i==-1:
                i=n-1
        else:
            j+=1
            if j==n:
                j=0
    return False   #if element isnt found and i==j
